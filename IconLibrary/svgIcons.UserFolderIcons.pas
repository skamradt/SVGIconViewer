unit svgIcons.UserFolderIcons;

(* Auto Generated by svgViewer.Generator on 9/14/2024 10:02:31 PM *)

interface

uses
  System.SysUtils,
  System.Types,
  vcl.Graphics,
  vcl.GraphUtil,
  svgViewer.Types;

type
  TUserFolderIconList = class(TInterfacedObject,ISVGIconList,ISVGUserFolderList)
  private
    fFillColor : TColor;
    fFilenames : TStringDynArray;
    fSources : TSTringDynArray;
    fDirectory : String;
  protected
    function GetCount : integer;
    function GetName(Index:Integer):string;
    function GetSource(Index:Integer):string;
    function GetFillColor : TColor;
    procedure SetFillColor(Value:TColor);
    procedure SetDirectory(value:String);
    function GetDirectory:string;
  public
    constructor Create(const aFolder:String);
    property Count : integer read GetCount;
    property Name[index:integer] : string read GetName;
    property Source[index:integer] : string read GetSource;
    property FillColor : TColor read GetFillColor write SetFillColor default clNone;
    property Directory : string read GetDirectory write SetDirectory;
  end;

implementation

uses
  System.IOUtils,
  System.StrUtils;

{$REGION 'C_FILE_NOT_FOUND_SVG Constant'}

// a red icon showing a file with an x.  This is just in case a user supplied
// directory of SVG's has one missing when attempting to load them.

const
  C_FILE_NOT_FOUND_SVG = '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">'+
  '<path d="M12 2V8C12 9.10457 12.8954 10 14 10H20V20C20 21.1046 19.1046 22 18 22H11.1904C12.3112 '+
  '20.8321 13 19.2465 13 17.5C13 13.9101 10.0899 11 6.5 11C5.6141 11 4.76959 11.1772 4 11.4982V4C4 '+
  '2.89543 4.89543 2 6 2H12ZM13.5 2.5V8C13.5 8.27614 13.7239 8.5 14 8.5H19.5L13.5 2.5ZM6.5 12C3.46243 '+
  '12 1 14.4624 1 17.5C1 20.5376 3.46243 23 6.5 23C9.53757 23 12 20.5376 12 17.5C12 14.4624 9.53757 '+
  '12 6.5 12ZM8.97823 15.7313L7.20843 17.5001L8.97806 19.2697C9.17332 19.465 9.17332 19.7816 8.97806 '+
  '19.9768C8.78279 20.1721 '+
  '8.46621 20.1721 8.27095 19.9768L6.50112 18.207L4.73246 19.9746C4.5372 20.1699 4.22061 20.1699 '+
  '4.02535 19.9746C3.83009 19.7794 3.83009 19.4628 4.02535 19.2675L5.79401 17.4999L4.02535 15.7312C3.83009'+
  ' 15.536 3.83009 15.2194 4.02535 15.0241C4.22061 14.8289 4.5372 14.8289 4.73246 15.0241L6.50133 '+
  '16.793L8.27113 15.0242C8.46639 14.829 8.78297 14.829 8.97823 15.0242C9.1735 15.2195 9.1735 15.5361 '+
  '8.97823 15.7313Z" fill="#FFBFBF"/><path d="M6.5 12C9.53757 12 12 14.4624 12 17.5C12 20.5376 9.53757 '+
  '23 6.5 23C3.46243 23 1 20.5376 1 17.5C1 14.4624 3.46243 12 6.5 12ZM12.1289 2C12.7254 2 13.2976 '+
  '2.23689 13.7195 2.65859L16.5314 5.46899L19.339 8.28087C19.7602 8.70273 19.9968 9.27451 19.9968 '+
  '9.87066V19.75C19.9968 20.9926 18.9895 22 17.7468 22L11.1896 22.0008C11.616 21.5566 11.98 21.052 '+
  '12.2672 20.5011L17.7468 20.5C18.161 20.5 18.4968 20.1642 18.4968 19.75L18.496 10.003L14.25 '+
  '10.0039C13.0591 10.0039 12.0844 9.07873 12.0052 7.90794L12 7.75389L11.999 3.5H6.25C5.83579 3.5 '+
  '5.5 3.83579 5.5 4.25L5.49909 11.0766C4.97586 11.1575 4.47324 11.3007 3.99907 11.4986L4 4.25C4 '+
  '3.00736 5.00736 2 6.25 2H12.1289ZM4.09305 14.9663L4.0238 15.0241L3.96594 15.0934C3.84782 15.2639 '+
  '3.84782 15.4915 3.96594 15.662L4.0238 15.7312L5.79335 17.5007L4.02639 19.2675L3.96853 19.3367C3.85041 '+
  '19.5072 3.85041 19.7348 3.96853 19.9053L4.02639 19.9746L4.09564 20.0325C4.26615 20.1506 4.49374 '+
  '20.1506 4.66425 20.0325L4.7335 19.9746L6.50035 18.2077L8.26939 19.9768L8.33864 20.0347C8.50915 '+
  '20.1528 8.73674 20.1528 8.90725 20.0347L8.9765 19.9768L9.03436 19.9076C9.15248 19.7371 9.15248 '+
  '19.5095 9.03436 19.339L8.9765 19.2697L7.20735 17.5007L8.97927 15.7313L9.03712 15.662C9.15525 15.4915 '+
  '9.15525 15.2639 9.03712 15.0934L8.97927 15.0242L8.91002 14.9663C8.73951 14.8482 8.51192 14.8482 '+
  '8.34141 14.9663L8.27216 15.0242L6.50035 16.7937L4.73091 15.0241L4.66166 14.9663C4.49115 14.8482 '+
  '4.26356 14.8482 4.09305 14.9663ZM13.499 4.559L13.5 7.75389C13.5 8.13359 13.7822 8.44738 14.1482 '+
  '8.49704L14.25 8.50389L17.441 8.503L13.499 4.559Z" fill="#FF0000"/></svg>';
{$ENDREGION}

constructor TUserFolderIconList.Create(const aFolder: String);
begin
  inherited Create;
  SetLength(fFilenames,0);
  SetLength(fSources,0);
  SetDirectory(aFolder);
end;

function TUserFolderIconList.GetCount : integer;
begin
  result := Length(fFilenames);
end;

function TUserFolderIconList.GetDirectory: string;
begin
  result := fDirectory;
end;

function TUserFolderIconList.GetFillColor : TColor;
begin
  Result := fFillColor;
end;

procedure TUserFolderIconList.SetDirectory(value: String);
var
  ix : integer;
begin
  fDirectory := Value;
  SetLength(fFilenames,0);
  for ix := Low(fSources) to High(fSources) do
    fSources[ix] := '';
  SetLength(fsources,0);
  fFilenames := TDirectory.getfiles(fDirectory,'*.svg');
  SetLength(fsources,Length(fFilenames));
end;

procedure TUserFolderIconList.SetFillColor(Value:TColor);
begin
  fFillColor := Value;
end;

function TUserFolderIconList.GetName(Index:Integer):string;
begin
  if index > length(fFilenames) then
    raise EArgumentOutOfRangeException.Create('Requested icon index is out of range');
  Result := ExtractFilename(fFilenames[index]);
  result := leftStr(Result,Length(REsult)-4);
end;

function TUserFolderIconList.GetSource(Index:Integer):string;
var
  sColor : string;
  SVG : String;
begin
  if index > length(fFilenames) then
    raise EArgumentOutOfRangeException.Create('Requested icon index is out of range');
  if fsources[index] = '' then
    begin
      if TFile.Exists(fFilenames[index]) then
        begin
          SVG := TFile.ReadAllText(fFilenames[index]);
          fSources[Index] := svg;
        end
      else
        SVG := C_FILE_NOT_FOUND_SVG;
    end
  else
    SVG := fSources[Index];
  if fFillcolor <> clNone then
    begin
      sColor := '"'+ColorToWebColorStr(fFillColor)+'"';
      SVG := StringReplace(SVG,'"currentColor"',sColor,[rfReplaceAll,rfIgnoreCase]);
    end;
  Result := SVG;
end;

end.
